language: rust
cache: cargo
os: linux

rust:
  - stable
  - beta
  - nightly

env:
  - RELEASE=
  - RELEASE=--release

arch:
  - amd64
  - arm64
  - ppc64le
  - s390x

script: cargo test $RELEASE

jobs:
  include:
    - arch: amd64
      rust: stable
      env: TARGET=i686
      addons:
        apt:
          packages:
            - gcc-multilib
      script: &i686_script
        - |
          set -e
          rustup target add i686-unknown-linux-gnu
          cargo test --target i686-unknown-linux-gnu --target-dir=target/i686
    - arch: amd64
      rust: beta
      env: TARGET=i686
      addons:
        apt:
          packages:
            - gcc-multilib
      script: *i686_script
    - arch: amd64
      rust: nightly
      env: TARGET=i686
      addons:
        apt:
          packages:
            - gcc-multilib
      script: *i686_script
    - arch: amd64
      rust: nightly
      env: SANITIZER=address
      script: &sanitizer_script
        - |
          set -e
          rustup component add rust-src
          RUSTFLAGS=-Zsanitizer="$SANITIZER" cargo test --lib --release -Zbuild-std --target x86_64-unknown-linux-gnu --target-dir=target/"$SANITIZER"
    - arch: amd64
      rust: nightly
      env: SANITIZER=memory
      script: *sanitizer_script
    - arch: amd64
      rust: nightly
      env: SANITIZER=thread
      script: *sanitizer_script
    - arch: amd64
      rust: nightly
      env: SANITIZER=leak
      script: *sanitizer_script
